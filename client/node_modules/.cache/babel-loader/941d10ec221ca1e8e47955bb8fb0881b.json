{"ast":null,"code":"import _classCallCheck from \"/Users/taimoorjaved/GitHub/RemindMe/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/taimoorjaved/GitHub/RemindMe/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/taimoorjaved/GitHub/RemindMe/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/taimoorjaved/GitHub/RemindMe/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/taimoorjaved/GitHub/RemindMe/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/taimoorjaved/GitHub/RemindMe/client/src/components/counter.jsx\";\nimport React, { Component } from \"react\";\n\nvar Counter =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Counter, _Component);\n\n  function Counter() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Counter);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Counter)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      value: _this.props.value\n    };\n    _this.styles = {\n      fontSize: 24,\n      fontWeight: \"bold\"\n    };\n\n    _this.handleIncrement = function (product) {\n      //console.log(product);\n      _this.setState({\n        value: _this.state.value + 1\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Counter, [{\n    key: \"renderTags\",\n    value: function renderTags() {\n      if (this.state.tags.length === 0) return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, \"There are no tags!\");\n      return React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, this.state.tags.map(function (tag) {\n        return React.createElement(\"li\", {\n          key: tag,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }, tag);\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: this.getBadgeClasses(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, this.formatCount()), React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this2.handleIncrement(_this2.state.value);\n        },\n        className: \"btn btn-secondary btn-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Increment\"), React.createElement(\"button\", {\n        onClick: this.props.onDelete,\n        className: \"btn btn-danger btn-sm m-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Delete\"));\n    }\n  }, {\n    key: \"getBadgeClasses\",\n    value: function getBadgeClasses() {\n      var classes = \"badge m-2 \";\n      classes += this.state.value === 0 ? \"badge-warning\" : \"badge-primary\";\n      return classes;\n    }\n  }, {\n    key: \"formatCount\",\n    value: function formatCount() {\n      var value = this.state.value;\n      return value === 0 ? \"Zero\" : value;\n    }\n  }]);\n\n  return Counter;\n}(Component);\n\nexport default Counter;","map":{"version":3,"sources":["/Users/taimoorjaved/GitHub/RemindMe/client/src/components/counter.jsx"],"names":["React","Component","Counter","state","value","props","styles","fontSize","fontWeight","handleIncrement","product","setState","tags","length","map","tag","getBadgeClasses","formatCount","onDelete","classes"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,O;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,KAAK,EAAE,MAAKC,KAAL,CAAWD;AADZ,K;UAIRE,M,GAAS;AACPC,MAAAA,QAAQ,EAAE,EADH;AAEPC,MAAAA,UAAU,EAAE;AAFL,K;;UAiBTC,e,GAAkB,UAAAC,OAAO,EAAI;AAC3B;AACA,YAAKC,QAAL,CAAc;AAAEP,QAAAA,KAAK,EAAE,MAAKD,KAAL,CAAWC,KAAX,GAAmB;AAA5B,OAAd;AACD,K;;;;;;;iCAfY;AACX,UAAI,KAAKD,KAAL,CAAWS,IAAX,CAAgBC,MAAhB,KAA2B,CAA/B,EAAkC,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAP;AAElC,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKV,KAAL,CAAWS,IAAX,CAAgBE,GAAhB,CAAoB,UAAAC,GAAG;AAAA,eACtB;AAAI,UAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAeA,GAAf,CADsB;AAAA,OAAvB,CADH,CADF;AAOD;;;6BAOQ;AAAA;;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAE,KAAKC,eAAL,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0C,KAAKC,WAAL,EAA1C,CADF,EAEE;AACE,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACR,eAAL,CAAqB,MAAI,CAACN,KAAL,CAAWC,KAAhC,CAAN;AAAA,SADX;AAEE,QAAA,SAAS,EAAC,0BAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFF,EAQE;AACE,QAAA,OAAO,EAAE,KAAKC,KAAL,CAAWa,QADtB;AAEE,QAAA,SAAS,EAAC,2BAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARF,CADF;AAiBD;;;sCAEiB;AAChB,UAAIC,OAAO,GAAG,YAAd;AACAA,MAAAA,OAAO,IAAI,KAAKhB,KAAL,CAAWC,KAAX,KAAqB,CAArB,GAAyB,eAAzB,GAA2C,eAAtD;AACA,aAAOe,OAAP;AACD;;;kCAEa;AAAA,UACJf,KADI,GACM,KAAKD,KADX,CACJC,KADI;AAEZ,aAAOA,KAAK,KAAK,CAAV,GAAc,MAAd,GAAuBA,KAA9B;AACD;;;;EAxDmBH,S;;AA2DtB,eAAeC,OAAf","sourcesContent":["import React, { Component } from \"react\";\n\nclass Counter extends Component {\n  state = {\n    value: this.props.value\n  };\n\n  styles = {\n    fontSize: 24,\n    fontWeight: \"bold\"\n  };\n\n  renderTags() {\n    if (this.state.tags.length === 0) return <p>There are no tags!</p>;\n\n    return (\n      <ul>\n        {this.state.tags.map(tag => (\n          <li key={tag}>{tag}</li>\n        ))}\n      </ul>\n    );\n  }\n\n  handleIncrement = product => {\n    //console.log(product);\n    this.setState({ value: this.state.value + 1 });\n  };\n\n  render() {\n    return (\n      <div>\n        <span className={this.getBadgeClasses()}>{this.formatCount()}</span>\n        <button\n          onClick={() => this.handleIncrement(this.state.value)}\n          className=\"btn btn-secondary btn-sm\"\n        >\n          Increment\n        </button>\n        <button\n          onClick={this.props.onDelete}\n          className=\"btn btn-danger btn-sm m-2\"\n        >\n          Delete\n        </button>\n      </div>\n    );\n  }\n\n  getBadgeClasses() {\n    let classes = \"badge m-2 \";\n    classes += this.state.value === 0 ? \"badge-warning\" : \"badge-primary\";\n    return classes;\n  }\n\n  formatCount() {\n    const { value } = this.state;\n    return value === 0 ? \"Zero\" : value;\n  }\n}\n\nexport default Counter;\n"]},"metadata":{},"sourceType":"module"}