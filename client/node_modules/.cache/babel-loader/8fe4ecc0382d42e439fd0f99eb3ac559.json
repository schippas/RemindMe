{"ast":null,"code":"import _classCallCheck from \"/Users/taimoorjaved/GitHub/RemindMe/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/taimoorjaved/GitHub/RemindMe/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/taimoorjaved/GitHub/RemindMe/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/taimoorjaved/GitHub/RemindMe/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/taimoorjaved/GitHub/RemindMe/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/taimoorjaved/GitHub/RemindMe/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/taimoorjaved/GitHub/RemindMe/client/src/MainEventPage.js\";\nimport React, { Component } from \"react\";\nimport { withRouter } from \"react-router\"; // import \"./mainEventPage.css\";\n\nimport \"./createEvent.css\";\nimport Calendar from \"react-calendar\";\n\nvar MainEventPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MainEventPage, _Component);\n\n  function MainEventPage(props) {\n    var _this;\n\n    _classCallCheck(this, MainEventPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MainEventPage).call(this, props));\n\n    _this.addEvent = function (updateVal) {\n      _this.setState(function (state) {\n        var events = state.events.concat(updateVal);\n        return {\n          events: events,\n          value: {}\n        };\n      });\n    };\n\n    _this.handleClick = function (i) {\n      _this.setState(function (state) {\n        var events = state.events.map(function (_ref, j) {\n          var event_name = _ref.event_name,\n              event_info = _ref.event_info,\n              event_date = _ref.event_date,\n              event_time = _ref.event_time;\n          console.log(\"j is \" + j);\n          console.log(\"i = \" + i);\n\n          if (j === i) {\n            console.log(\"there\"); // return {isToggleOn: !state.isToggleOn}\n\n            console.log(\"The value of isToggleOn is \" + state.isToggleOn);\n            console.log(\"The value of !isToggleOn is \" + !state.isToggleOn); // state.isToggleOn: !state.isToggleOn;\n            // return state.isToggleOn;\n          } else {\n            console.log(\"here\");\n          }\n        });\n        return {\n          events: events\n        };\n      });\n    };\n\n    _this.onChange = function (date) {\n      _this.setState({\n        date: date\n      });\n\n      console.log(_this.date);\n    };\n\n    _this.state = {\n      value: {},\n      events: [],\n      date: new Date(),\n      isToggleOn: true\n    }; // This binding is necessary to make `this` work in the callback\n\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(MainEventPage, [{\n    key: \"handleClickEvent\",\n    value: function handleClickEvent() {\n      console.log(\"create event redirect\");\n      window.location.replace(\"/create\");\n    } // handleClick(event) {\n    //     this.setState(function (prevState){\n    //         return {isToggleOn: !prevState.isToggleOn}\n    //     });\n    // }\n\n  }, {\n    key: \"onMainEventClick\",\n    value: function onMainEventClick() {\n      window.location.replace(\"/events\");\n    }\n  }, {\n    key: \"onLoginClick\",\n    value: function onLoginClick() {\n      window.location.replace(\"/\");\n    }\n  }, {\n    key: \"loginReturn\",\n    value: function loginReturn() {\n      window.location.replace(\"/\");\n    }\n  }, {\n    key: \"handleReturn\",\n    value: function handleReturn() {\n      window.location.replace(\"/events\");\n    }\n  }, {\n    key: \"eventReturn\",\n    value: function eventReturn() {\n      window.location.replace(\"/create\");\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var updateEvent = this.addEvent;\n      var xhttp = new XMLHttpRequest();\n      xhttp.open(\"POST\", \"/api/listEvents\", true);\n      console.log(this.readyState);\n      xhttp.setRequestHeader(\"Content-Type\", \"application/json\");\n\n      xhttp.onreadystatechange = function () {\n        if (this.readyState === 4 && this.status === 200) {\n          var response = JSON.parse(this.responseText);\n          console.log(response);\n\n          if (response.status === 'okay') {\n            console.log(response.events);\n\n            for (var i = 0; i < response.events.length; i++) {\n              var event = response.events[i];\n              updateEvent(event);\n            }\n          }\n        }\n      };\n\n      xhttp.send(null);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"pg_bgd\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"headerBar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \" RemindMe \"), React.createElement(\"div\", {\n        className: \"options_bar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        id: \"create_event_btn\",\n        className: \"option_bar_button\",\n        onClick: this.eventReturn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"Create Event\"), React.createElement(\"button\", {\n        id: \"return_main_btn\",\n        className: \"option_bar_button2\",\n        onClick: this.handleReturn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"Return to Main Events Page\"), React.createElement(\"button\", {\n        id: \"login/signup\",\n        className: \"option_bar_button3\",\n        onClick: this.loginReturn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"Login/Signup\")), React.createElement(Calendar, {\n        className: \"calendarDiv\",\n        onChange: this.onChange,\n        value: this.state.date,\n        calendarType: \"US\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"box23\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"titleBar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"Your Weekly Dose of Events\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"which_week\",\n        type: \"text\",\n        id: \"weekBox\",\n        value: this.state.date,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"mini_script\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"Subscribe(d)\")), this.state.events.map(function (_ref2, index) {\n        var event_name = _ref2.event_name,\n            event_info = _ref2.event_info,\n            event_date = _ref2.event_date,\n            event_time = _ref2.event_time;\n        return React.createElement(\"div\", {\n          className: \"each-box2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"togglebtn\",\n          onClick: function onClick() {\n            return _this2.handleClick(index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173\n          },\n          __self: this\n        }, _this2.state.isToggleOn ? 'Interested' : 'Not Interested'), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          className: \"inBoxEventDescription\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178\n          },\n          __self: this\n        }, event_name.toString() + ': ' + event_info.toString() + ' ' + event_date.toString() + ' at '), React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179\n          },\n          __self: this\n        }, event_time.toString())));\n      })));\n    }\n  }]);\n\n  return MainEventPage;\n}(Component);\n\nexport default withRouter(MainEventPage);","map":{"version":3,"sources":["/Users/taimoorjaved/GitHub/RemindMe/client/src/MainEventPage.js"],"names":["React","Component","withRouter","Calendar","MainEventPage","props","addEvent","updateVal","setState","state","events","concat","value","handleClick","i","map","j","event_name","event_info","event_date","event_time","console","log","isToggleOn","onChange","date","Date","bind","window","location","replace","updateEvent","xhttp","XMLHttpRequest","open","readyState","setRequestHeader","onreadystatechange","status","response","JSON","parse","responseText","length","event","send","eventReturn","handleReturn","loginReturn","index","toString"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { withRouter } from \"react-router\";\n// import \"./mainEventPage.css\";\nimport \"./createEvent.css\";\nimport Calendar from \"react-calendar\";\n\nclass MainEventPage extends Component {\n    constructor(props) {\n            super(props);\n            this.state = { \n                value: {},\n                events:[],\n                date: new Date(),\n                isToggleOn: true,\n            };\n\n\n        // This binding is necessary to make `this` work in the callback\n\t      this.handleClick = this.handleClick.bind(this);\n    }\n\n\n    addEvent = ( updateVal ) => {\n            this.setState(state => {\n                const events = state.events.concat(updateVal);\n                return {\n                    events,\n                    value:{},\n                };\n            })\n    };\n\n    handleClickEvent() {\n        console.log(\"create event redirect\");\n        window.location.replace(\"/create\");\n    }\n\n    // handleClick(event) {\n    //     this.setState(function (prevState){\n    //         return {isToggleOn: !prevState.isToggleOn}\n\n    //     });\n    // }\n\n    handleClick = i => {\n        this.setState(state => {\n            const events = state.events.map(({event_name, event_info, event_date, event_time}, j) => {\n                console.log(\"j is \" + j);\n                console.log(\"i = \" + i);\n\n                if ( j === i ){\n                    console.log(\"there\");\n                    // return {isToggleOn: !state.isToggleOn}\n                    \n                    console.log(\"The value of isToggleOn is \" + state.isToggleOn);\n                    console.log(\"The value of !isToggleOn is \" + !state.isToggleOn);\n                    \n                    // state.isToggleOn: !state.isToggleOn;\n                    // return state.isToggleOn;\n\n                }else{\n                    console.log(\"here\");\n                }\n            });\n            return {events};\n        });\n    };\n\n    onMainEventClick() {\n        window.location.replace(\"/events\");\n    }\n\n    onLoginClick() {\n        window.location.replace(\"/\");\n    }\n\n    onChange = (date) => {\n        this.setState({ date })\n        console.log(this.date);\n    }\n\n\n    loginReturn() {\n        window.location.replace(\"/\");\n    }\n\n    handleReturn() {\n        window.location.replace(\"/events\");\n    }\n\n    eventReturn() {\n        window.location.replace(\"/create\");\n    }\n\ncomponentDidMount( ){\n       \n\n        const updateEvent = this.addEvent;\n        var xhttp = new XMLHttpRequest();\n        xhttp.open(\"POST\", \"/api/listEvents\" , true);\n        console.log(this.readyState);\n\n        xhttp.setRequestHeader(\"Content-Type\", \"application/json\");\n\n        xhttp.onreadystatechange = function (){\n            if ( this.readyState === 4 && this.status === 200 ){\n                var response = JSON.parse(this.responseText);\n                console.log(response);\n\n                if ( response.status === 'okay' ){\n                    console.log(response.events);\n                    for ( var i = 0; i < response.events.length; i++ ){\n                        var event = response.events[i]\n                        updateEvent(event)\n                    }\n                }\n            }\n        };\n        xhttp.send(null);\n}\n\n\n    render() {\n        return (\n\n            <div className=\"pg_bgd\">\n                <h1 className=\"headerBar\"> RemindMe </h1>\n\n                <div className=\"options_bar\">\n                    <button id=\"create_event_btn\" className=\"option_bar_button\" onClick={this.eventReturn}>\n                        Create Event\n                    </button>\n\n                    <button\n                        id=\"return_main_btn\"\n                        className=\"option_bar_button2\"\n                        onClick={this.handleReturn} >\n                        Return to Main Events Page\n                        </button>\n\n                    <button\n                        id=\"login/signup\"\n                        className=\"option_bar_button3\"\n                        onClick={this.loginReturn}>\n                        Login/Signup\n                        </button>\n\n                </div>\n\n                {/*<div> was here*/}\n                <Calendar className=\"calendarDiv\" onChange={this.onChange} value={this.state.date} calendarType=\"US\">\n\n                </Calendar>\n                {/*</div> was her*/}\n\n                <div className=\"box23\">\n                    <h1 className=\"titleBar\">Your Weekly Dose of Events</h1>\n\n                        <div>\n                            <input className=\"which_week\" type=\"text\" id=\"weekBox\" value={this.state.date} />\n                        </div>\n\n                        <div>\n                            <h3 className=\"mini_script\">Subscribe(d)</h3>\n\t\t\t            </div>\n\n\t\t            \t{\n                            this.state.events.map(({event_name, event_info, event_date, event_time}, index) =>{\n                                return(\n                                    \n                                        <div className=\"each-box2\">\n\n                                                <button className=\"togglebtn\" onClick={ () => this.handleClick(index)}>\n                                                    {this.state.isToggleOn ? 'Interested' : 'Not Interested'}\n                                                </button>\n\n                                                <div> \n                                                     <h1 className=\"inBoxEventDescription\">{event_name.toString() + ': ' + event_info.toString() + ' ' + event_date.toString() + ' at ' }</h1>\n                                                     <h1>{event_time.toString()}</h1>\n                                                </div>\n\n                                        </div>\n\n                                )\n                            })\n                        }\n\n                </div>\n\n            </div>\n        );\n    }\n\n}\n\nexport default withRouter(MainEventPage);"]},"metadata":{},"sourceType":"module"}