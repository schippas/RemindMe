{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.formatShortWeekday = exports.formatWeekday = exports.formatMonth = exports.formatMonthYear = exports.formatLongDate = exports.formatDate = void 0;\n\nvar _getUserLocale = _interopRequireDefault(require(\"get-user-locale\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar formatterCache = {};\n/**\n * Gets Intl-based date formatter from formatter cache. If it doesn't exist in cache\n * just yet, it will be created on the fly.\n */\n\nvar getFormatter = function getFormatter(locale, options) {\n  if (!locale) {\n    // Default parameter is not enough as it does not protect us from null values\n    // eslint-disable-next-line no-param-reassign\n    locale = (0, _getUserLocale.default)();\n  }\n\n  var stringifiedOptions = JSON.stringify(options);\n\n  if (!formatterCache[locale]) {\n    formatterCache[locale] = {};\n  }\n\n  if (!formatterCache[locale][stringifiedOptions]) {\n    formatterCache[locale][stringifiedOptions] = function (n) {\n      return n.toLocaleString(locale, options);\n    };\n  }\n\n  return formatterCache[locale][stringifiedOptions];\n};\n/**\n * Changes the hour in a Date to ensure right date formatting even if DST is messed up.\n * Workaround for bug in WebKit and Firefox with historical dates.\n * For more details, see:\n * https://bugs.chromium.org/p/chromium/issues/detail?id=750465\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1385643\n *\n * @param {Date} date Date.\n */\n\n\nvar toSafeHour = function toSafeHour(date) {\n  var safeDate = new Date(date);\n  return new Date(safeDate.setHours(12));\n};\n\nvar formatDate = function formatDate(locale, date) {\n  return getFormatter(locale, {\n    day: 'numeric',\n    month: 'numeric',\n    year: 'numeric'\n  })(toSafeHour(date));\n};\n\nexports.formatDate = formatDate;\n\nvar formatLongDate = function formatLongDate(locale, date) {\n  return getFormatter(locale, {\n    day: 'numeric',\n    month: 'long',\n    year: 'numeric'\n  })(toSafeHour(date));\n};\n\nexports.formatLongDate = formatLongDate;\n\nvar formatMonthYear = function formatMonthYear(locale, date) {\n  return getFormatter(locale, {\n    month: 'long',\n    year: 'numeric'\n  })(toSafeHour(date));\n};\n\nexports.formatMonthYear = formatMonthYear;\n\nvar formatMonth = function formatMonth(locale, date) {\n  return getFormatter(locale, {\n    month: 'long'\n  })(toSafeHour(date));\n};\n\nexports.formatMonth = formatMonth;\n\nvar formatWeekday = function formatWeekday(locale, date) {\n  return getFormatter(locale, {\n    weekday: 'long'\n  })(toSafeHour(date));\n};\n\nexports.formatWeekday = formatWeekday;\n\nvar formatShortWeekday = function formatShortWeekday(locale, date) {\n  return getFormatter(locale, {\n    weekday: 'short'\n  })(toSafeHour(date));\n};\n\nexports.formatShortWeekday = formatShortWeekday;","map":null,"metadata":{},"sourceType":"script"}