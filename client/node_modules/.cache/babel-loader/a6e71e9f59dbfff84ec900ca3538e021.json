{"ast":null,"code":"import _classCallCheck from \"/Users/taimoorjaved/GitHub/RemindMe/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/taimoorjaved/GitHub/RemindMe/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/taimoorjaved/GitHub/RemindMe/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/taimoorjaved/GitHub/RemindMe/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/taimoorjaved/GitHub/RemindMe/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/taimoorjaved/GitHub/RemindMe/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/taimoorjaved/GitHub/RemindMe/client/src/MainEventPage.js\";\nimport React, { Component } from \"react\";\nimport { withRouter } from \"react-router\"; // import \"./mainEventPage.css\";\n\nimport \"./createEvent.css\";\nimport Calendar from \"react-calendar\";\n\nvar MainEventPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MainEventPage, _Component);\n\n  function MainEventPage(props) {\n    var _this;\n\n    _classCallCheck(this, MainEventPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MainEventPage).call(this, props));\n\n    _this.onAddItem = function (updateVal) {\n      _this.setState(function (state) {\n        var events = state.events.concat(updateVal);\n        return {\n          events: events,\n          value: {}\n        };\n      });\n    };\n\n    _this.onChange = function (date) {\n      _this.setState({\n        date: date\n      });\n\n      console.log(_this.date);\n    };\n\n    _this.state = {\n      createNewEvent: false,\n      events: [//fetch events here\n      ]\n    };\n    _this.state = {\n      value: {},\n      events: [],\n      date: new Date(),\n      isToggleOn: true\n    }; // This binding is necessary to make `this` work in the callback\n\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(MainEventPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (localStorage.account) {\n        var tmpobj = localStorage.account;\n      }\n\n      console.log(tmpobj);\n      var obj = JSON.stringify(tmpobj);\n      console.log(obj);\n      var updateEvent = this.onAddItem;\n      var xhttp = new XMLHttpRequest();\n      xhttp.open(\"POST\", \"/api/listEvents\", true);\n      console.log(this.readyState);\n      xhttp.setRequestHeader(\"Content-Type\", \"application/json\");\n\n      xhttp.onreadystatechange = function () {\n        if (this.readyState === 4 && this.status === 200) {\n          var response = JSON.parse(this.responseText);\n          console.log(response);\n\n          if (response.status === 'okay') {\n            console.log(response.events);\n\n            for (var i = 0; i < response.events.length; i++) {\n              var event = response.events[i];\n              updateEvent(event);\n            }\n          }\n        }\n      };\n\n      console.log(\"obj is \" + obj);\n      xhttp.send(null);\n    }\n  }, {\n    key: \"handleClickEvent\",\n    value: function handleClickEvent() {\n      //this.setState({ createNewEvent: true });\n      console.log(\"create event redirect\");\n      window.location.replace(\"/create\");\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick() {\n      this.setState(function (prevState) {\n        var tmp = this.state.events;\n        tmp[index].isToggleOn = !tmp[index].isToggleOn;\n        this.setState({\n          events: tmp\n        }); // return { isToggleOn: !prevState.isToggleOn };\n      });\n    }\n  }, {\n    key: \"onMainEventClick\",\n    value: function onMainEventClick() {\n      window.location.replace(\"/events\");\n    }\n  }, {\n    key: \"onLoginClick\",\n    value: function onLoginClick() {\n      window.location.replace(\"/\");\n    }\n  }, {\n    key: \"loginReturn\",\n    value: function loginReturn() {\n      window.location.replace(\"/\");\n    }\n  }, {\n    key: \"handleReturn\",\n    value: function handleReturn() {\n      window.location.replace(\"/events\");\n    }\n  }, {\n    key: \"eventReturn\",\n    value: function eventReturn() {\n      window.location.replace(\"/create\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"pg_bgd\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"headerBar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \" RemindMe \"), React.createElement(\"div\", {\n        className: \"options_bar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        id: \"create_event_btn\",\n        className: \"option_bar_button\",\n        onClick: this.eventReturn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"Create Event\"), React.createElement(\"button\", {\n        id: \"return_main_btn\",\n        className: \"option_bar_button2\",\n        onClick: this.handleReturn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \"Return to Main Events Page\"), React.createElement(\"button\", {\n        id: \"login/signup\",\n        className: \"option_bar_button3\",\n        onClick: this.loginReturn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"Login/Signup\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(Calendar, {\n        className: \"calendarDiv\",\n        onChange: this.onChange,\n        value: this.state.date,\n        calendarType: \"US\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"box23\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"titleBar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \"Your Weekly Dose of Events\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"which_week\",\n        type: \"text\",\n        id: \"weekBox\",\n        value: this.state.date,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"mini_script\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, \"Subscribe(d)\")), this.state.events.map(function (_ref) {\n        var event_id = _ref.event_id,\n            event_name = _ref.event_name,\n            event_info = _ref.event_info,\n            event_date = _ref.event_date,\n            event_time = _ref.event_time;\n        return React.createElement(\"div\", {\n          className: \"each-box2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"togglebtn\",\n          onClick: _this2.handleClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188\n          },\n          __self: this\n        }, _this2.state.isToggleOn ? 'Interested' : 'Not Interested'), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          className: \"inBoxEventDescription\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193\n          },\n          __self: this\n        }, \" \", event_time.toString() + \" \" + event_name.toString(), \" \")));\n      })));\n    }\n  }]);\n\n  return MainEventPage;\n}(Component);\n\nexport default withRouter(MainEventPage);","map":{"version":3,"sources":["/Users/taimoorjaved/GitHub/RemindMe/client/src/MainEventPage.js"],"names":["React","Component","withRouter","Calendar","MainEventPage","props","onAddItem","updateVal","setState","state","events","concat","value","onChange","date","console","log","createNewEvent","Date","isToggleOn","handleClick","bind","localStorage","account","tmpobj","obj","JSON","stringify","updateEvent","xhttp","XMLHttpRequest","open","readyState","setRequestHeader","onreadystatechange","status","response","parse","responseText","i","length","event","send","window","location","replace","prevState","tmp","index","eventReturn","handleReturn","loginReturn","map","event_id","event_name","event_info","event_date","event_time","toString"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { withRouter } from \"react-router\";\n// import \"./mainEventPage.css\";\nimport \"./createEvent.css\";\nimport Calendar from \"react-calendar\";\n\nclass MainEventPage extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { \n            value: {},\n            events:[],\n            date: new Date(),\n            isToggleOn: true };\n\n        // This binding is necessary to make `this` work in the callback\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    onAddItem = ( updateVal ) => {\n        this.setState(state => {\n            const events = state.events.concat(updateVal);\n            return {\n                events,\n                value:{},\n            };\n        })\n    };\n\n\n    componentDidMount( )\n    {\n       \n        if ( localStorage.account )\n        {\n            var tmpobj = localStorage.account;\n        }\n\n        console.log((tmpobj));\n       \n        var obj = JSON.stringify(tmpobj);\n        console.log((obj));\n\n        const updateEvent = this.onAddItem;\n        var xhttp = new XMLHttpRequest();\n        xhttp.open(\"POST\", \"/api/listEvents\" , true);\n        console.log(this.readyState);\n\n        xhttp.setRequestHeader(\"Content-Type\", \"application/json\");\n\n        xhttp.onreadystatechange = function ()\n        {\n            if ( this.readyState === 4 && this.status === 200 )\n            {\n                var response = JSON.parse(this.responseText);\n                console.log(response);\n\n                if ( response.status === 'okay' )\n                {\n                    console.log(response.events);\n                    for ( var i = 0; i < response.events.length; i++ )\n                    {\n                        var event = response.events[i]\n\n                        updateEvent(event)\n                    }\n                }\n            }\n        };\n        console.log(\"obj is \"+ obj);\n        xhttp.send(null);\n    }\n\n    handleClickEvent() {\n        //this.setState({ createNewEvent: true });\n        console.log(\"create event redirect\");\n        window.location.replace(\"/create\");\n    }\n\n    handleClick() {\n        this.setState(function (prevState) {\n            let tmp = this.state.events;\n            tmp[index].isToggleOn = !tmp[index].isToggleOn;\n            this.setState({ events: tmp });\n        \n\n            // return { isToggleOn: !prevState.isToggleOn };\n        });\n    }\n\n    onMainEventClick() {\n        window.location.replace(\"/events\");\n    }\n\n    onLoginClick() {\n        window.location.replace(\"/\");\n    }\n\n    onChange = (date) => {\n        this.setState({ date })\n        console.log(this.date);\n    }\n\n    state = {\n        createNewEvent: false,\n        events: [\n            //fetch events here\n        ]\n    };\n\n    loginReturn() {\n        window.location.replace(\"/\");\n    }\n\n    handleReturn() {\n        window.location.replace(\"/events\");\n    }\n\n    eventReturn() {\n        window.location.replace(\"/create\");\n    }\n\n    render() {\n        return (\n\n            <div className=\"pg_bgd\">\n                <h1 className=\"headerBar\"> RemindMe </h1>\n\n                <div className=\"options_bar\">\n            \n                       <button id=\"create_event_btn\" className=\"option_bar_button\" onClick={this.eventReturn}>\n                            Create Event\n                        </button>\n\n                        <button\n                            id=\"return_main_btn\"\n                            className=\"option_bar_button2\"\n                            onClick={this.handleReturn} >\n                            Return to Main Events Page\n                        </button>\n\n                        <button\n                            id=\"login/signup\"\n                            className=\"option_bar_button3\"\n                            onClick={this.loginReturn}>\n                            Login/Signup\n                        </button>\n\n                </div>\n\n                <div>   \n                   <Calendar className=\"calendarDiv\" onChange={this.onChange} value={this.state.date} calendarType=\"US\">\n\n                   </Calendar>\n                </div>\n\n                <div className=\"box23\">\n                    <h1 className=\"titleBar\">Your Weekly Dose of Events</h1>\n\n                        <div>\n                            <input className=\"which_week\" type=\"text\" id=\"weekBox\" value={this.state.date} />\n                        </div>\n\n                        <div>\n                            <h3 className=\"mini_script\">Subscribe(d)</h3>\n                        </div>\n\n\n                        {/* <div className=\"each-box\">\n                                <button className=\"togglebtn\" onClick={this.handleClick}>\n                                    {this.state.isToggleOn ? 'Interested' : 'Not Interested'}\n                                </button>          \n\n                                <div>\n                                    <h1 className=\"inBoxEventDescription\"> asas </h1>\n                                </div>\n                              \n                        </div>  */}\n\n                        {\n                            this.state.events.map(({event_id, event_name, event_info, event_date, event_time}) =>{\n                                return(\n                                    \n                                        <div className=\"each-box2\">\n\n\n                                                <button className=\"togglebtn\" onClick={this.handleClick}>\n                                                    {this.state.isToggleOn ? 'Interested' : 'Not Interested'}\n                                                </button>\n\n                                                <div> \n                                                     <h1 className=\"inBoxEventDescription\"> {event_time.toString() + \" \" + event_name.toString()} </h1>\n                                                </div>\n\n                                              \n\n                                        </div>\n\n                                )\n                            })\n                        }   \n\n\n                         \n                    \n\n            </div>\n\n         </div>\n        );\n    }\n\n}\n\nexport default withRouter(MainEventPage);\n"]},"metadata":{},"sourceType":"module"}